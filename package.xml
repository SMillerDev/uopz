<?xml version="1.0" encoding="UTF-8"?>
<package packagerversion="1.9.4" version="2.0" xmlns="http://pear.php.net/dtd/package-2.0" xmlns:tasks="http://pear.php.net/dtd/tasks-1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pear.php.net/dtd/tasks-1.0 http://pear.php.net/dtd/tasks-1.0.xsd http://pear.php.net/dtd/package-2.0 http://pear.php.net/dtd/package-2.0.xsd">
 <name>uopz</name>
 <channel>pecl.php.net</channel>
 <summary>User Operations for Zend</summary>
 <description>
The uopz extension is focused on providing utilities to aid with unit testing PHP code.

It supports the following activities:

* Intercepting function execution
* Intercepting object creation
* Hooking into function execution
* Manipulation of function statics
* Manipulation of function flags
* Redefinition of constants
* Deletion of constants
* Runtime creation of functions and methods
</description>
 <lead>
  <name>Joe Watkins</name>
  <user>krakjoe</user>
  <email>pthreads@pthreads.org</email>
  <active>yes</active>
 </lead>
 <lead>
  <name>Remi Collet</name>
  <user>remi</user>
  <email>remi@php.net</email>
  <active>yes</active>
 </lead>
 <date>2019-09-18</date>
 <version>
  <release>6.1.2dev</release>
  <api>6.0.0</api>
 </version>
 <stability>
  <release>stable</release>
  <api>stable</api>
 </stability>
 <license uri="http://www.php.net/license">PHP License</license>
 <notes>
-
 </notes>
 <contents>
  <dir name="/">
    <dir name="/src">
     <file name="class.c" role="src" />
     <file name="class.h" role="src" />
     <file name="constant.c" role="src" />
     <file name="constant.h" role="src" />
     <file name="copy.c" role="src" />
     <file name="copy.h" role="src" />
     <file name="executors.c" role="src" />
     <file name="executors.h" role="src" />
     <file name="function.c" role="src" />
     <file name="function.h" role="src" />
     <file name="handlers.c" role="src" />
     <file name="handlers.h" role="src" />
     <file name="hook.c" role="src" />
     <file name="hook.h" role="src" />
     <file name="return.c" role="src" />
     <file name="return.h" role="src" />
     <file name="util.c" role="src" />
     <file name="util.h" role="src" />
    </dir>
    <dir name="/tests">
     <file name="001.phpt" role="test" />
     <file name="002.phpt" role="test" />
     <file name="003.phpt" role="test" />
     <file name="004.phpt" role="test" />
     <file name="005.phpt" role="test" />
     <file name="006.phpt" role="test" />
     <file name="007.phpt" role="test" />
     <file name="008.phpt" role="test" />
     <file name="009.phpt" role="test" />
     <file name="010.phpt" role="test" />
     <file name="011.phpt" role="test" />
     <file name="012.phpt" role="test" />
     <file name="013.phpt" role="test" />
     <file name="016.phpt" role="test" />
     <file name="017.phpt" role="test" />
     <file name="018.phpt" role="test" />
     <file name="019.phpt" role="test" />
     <file name="020.phpt" role="test" />
     <file name="021.phpt" role="test" />
     <file name="027.phpt" role="test" />
     <file name="028.phpt" role="test" />
     <file name="029.phpt" role="test" />
     <file name="032.phpt" role="test" />
     <file name="033.phpt" role="test" />
     <file name="035.phpt" role="test" />
     <file name="036.phpt" role="test" />
     <file name="038.phpt" role="test" />
     <file name="039.phpt" role="test" />
     <file name="040.phpt" role="test" />
     <file name="skipif.inc" role="test" />
     <dir name="/bugs">
      <file name="0001-uopz_set_static.phpt" role="test" />
      <file name="0002-uopz_set_static_clear.phpt" role="test" />
      <file name="0003-uopz_get_property.phpt" role="test" />
      <file name="0004-uopz_set_property.phpt" role="test" />
      <file name="0005-uopz_set_return_prototype.phpt" role="test" />
      <file name="0006-uopz-opcache-const-subst.phpt" role="test" />
      <file name="gh43.phpt" role="test" />
      <file name="gh53.phpt" role="test" />
      <file name="gh64.phpt" role="test" />
      <file name="gh68.phpt" role="test" />
      <file name="gh73.phpt" role="test" />
      <file name="gh76.phpt" role="test" />
      <file name="gh85.phpt" role="test" />
      <file name="gh86.phpt" role="test" />
      <file name="gh99.phpt" role="test" />
      <file name="gh100.phpt" role="test" />
      <file name="gh102.phpt" role="test" />
      <file name="gh106.phpt" role="test" />
      <file name="gh106a.phpt" role="test" />
      <file name="gh109.phpt" role="test" />
     </dir>
    </dir>
    <file name="uopz.h" role="src" />
    <file name="uopz.c" role="src" />
    <file name="config.m4" role="src" />
    <file name="config.w32" role="src" />
    <file name="LICENSE" role="doc" />
    <file name="README.md" role="doc" />
  </dir>
 </contents>
 <dependencies>
  <required>
   <php>
    <min>7.1.0</min>
   </php>
   <pearinstaller>
    <min>1.10</min>
   </pearinstaller>
   <extension>
    <name>xdebug</name>
    <max>2.9.3</max>
    <conflicts />
   </extension>
  </required>
 </dependencies>
 <providesextension>uopz</providesextension>
 <extsrcrelease />
 <changelog>
  <release>
   <date>2019-09-18</date>
   <version>
    <release>6.1.1</release>
    <api>6.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
- Fix compatibility with 7.4.0RC1
- Fix gh#110 uopz_set_mock function does not work if xdebug is loaded
   </notes>
  </release>
  <release>
   <date>2019-05-27</date>
   <version>
    <release>6.1.0</release>
    <api>6.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
  - Fix #109 uopz_set_hook closure receive extra arguments when function call
    through call_user_func and call_user_func_array
  - 7.4 support
   </notes>
  </release>
  <release>
   <date>2019-02-06</date>
   <version>
    <release>6.0.1</release>
    <api>6.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
- Add "uopz.exit" configuration option, to allow the execution of exit
  opcodes or not (default=0 to keep current behavior)
- Improve opcache optimizer compatibility
- Display ini settings in module info
   </notes>
  </release>
  <release>
   <date>2019-01-30</date>
   <version>
    <release>6.0.0</release>
    <api>6.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
- Breaking change to uopz_set_mock: now behaves like the old test-helpers new overload
- Fixed redefine/undefine namespaced constants
- Fix flags being ignored when adding functions
- Remove executor hook for maximum compatibility
   </notes>
  </release>
  <release>
   <date>2019-01-02</date>
   <version>
    <release>5.1.0</release>
    <api>5.1.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
- Fix #89 uopz_flags bugs on 64bit windows
- Fix #87 segfault when hook throws fatal error
- Fix #86 interface support for uopz_set_return
- Fix #85 cuf/cufa bugs
- Fix #76 uopz_extend changing linkage
- Fix #73 cuf/cufa bugs
- Fix #68 hang when using anon class as mock
- Fix #64 segfault after uopz_set_static
- Fix #63 class constant redefinition depends on opcache
- Fix #61 mocking not working with xdebug
- Fix #51 hooks and returns bug
- Fix #42 uopz_set_mock not working in some cases
- Fix PHP 7.3 compatibility
   </notes>
  </release>
  <release>
   <date>2017-08-03</date>
   <version>
    <release>5.0.2</release>
    <api>5.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
- add uopz.disable ini switch (default 0)
- fix gh#43: setting hook on __invoke method doesn't work on call_user_func
- fix gh#48: segmentation fault (uopz_set_return)
- add 4 new functions:
    - uopz_call_user_func(callable function, ... args)
    - uopz_get_exit_status()
    - uopz_allow_exit(bool allow)
    - uopz_call_user_func_array(callable function, array args)
- fix PHP 7.1 compatibility
- fix PHP 7.2 compatibility
   </notes>
  </release>
  <release>
   <date>2016-04-13</date>
   <version>
    <release>5.0.1</release>
    <api>5.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
- PHP 7 compatibility
- new API, see documentation
   </notes>
  </release>
  <release>
   <date>2015-03-04</date>
   <version>
    <release>2.0.7</release>
    <api>2.0.7</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
  fix bug in overriding methods in classes loaded prior to override
  add ability to send object from ZEND_NEW handler
  send exit parameter to overload function
  fix bug in handling exit status code when overloading disabled
  set exit status code when overloading enabled from return value
   </notes>
  </release>
 </changelog>
</package>
